Language: Cpp
BasedOnStyle: google
AccessModifierOffset: -2
IndentWidth: 2

# ------------------------------------------------------------
# 合并类中定义的函数(单行)
# 函数体空或者极短
# 似乎对类模板的成员模板失效
AllowShortFunctionsOnASingleLine: Inline

# 允许将简单的语句块放到一个单行,如if (a) { return; }
AllowShortBlocksOnASingleLine: true

# 很短的情况下的标签将会被放到单独的行,如case语句
AllowShortCaseLabelsOnASingleLine: true

# IndentCaseLabels(bool),switch语句中的case是否缩进,未启用

# 同AllowShortBlocksOnASingleLine
# 特指if
AllowShortIfStatementsOnASingleLine: true

# 短循环单行
AllowShortLoopsOnASingleLine: true
# ------------------------------------------------------------

# 模板换行
AlwaysBreakTemplateDeclarations: Yes

# ------------------------------------------------------------

# 开括号后的对齐
AlignAfterOpenBracket: Align

# 左对齐结构体数组
AlignArrayOfStructures: Left

# 对齐连续赋值(不同行)
AlignConsecutiveAssignments:
  Enabled: true              # 默认的连续赋值对齐
  AcrossEmptyLines: false    # 是否跨空行对齐
  AcrossComments: true       # 跨注释对齐
  AlignCompound: true        # 混合运算符+=会对齐于=（仅限于连续赋值)
  PadOperators: true         # 混合运算符填补对齐到所有左值的最右边边界.(仅限于连续赋值)

# 声明对齐
AlignConsecutiveDeclarations:
  Enabled: true
  AcrossEmptyLines: false    # 不跨空行,防止对齐函数
  AcrossComments: true

# AlignConsecutiveBitFields 位段对齐
AlignConsecutiveBitFields:
  Enabled: true
  AcrossEmptyLines: true
  AcrossComments: true

# AlignConsecutiveMacros 连续宏定义对齐
AlignConsecutiveMacros:
  Enabled: true
  AcrossEmptyLines: false
  AcrossComments: true

# AlignEscapedNewlines 对齐分割语法行的斜杠符
AlignEscapedNewlines: Right

# AlignOperands 竖直对齐表达式的操作数(同一行连续赋值,需换行对齐)
AlignOperands: Align

# AlignTrailingComments 对齐尾部注释
AlignTrailingComments: true  # 不会对齐空行隔断的注释

# ------------------------------------------------------------

# 花括号
BreakBeforeBraces: Custom    #自定义是否生效
BraceWrapping:
  AfterClass: true
  AfterControlStatement: true
  AfterFunction: true
  AfterNamespace: true
  AfterStruct: true
  AfterUnion: true
  AfterExternBlock: true
  BeforeCatch: true
  BeforeElse: true
  SplitEmptyFunction: false
  SplitEmptyRecord: false
  SplitEmptyNamespace: false

# ------------------------------------------------------------

# 构造函数初始化列表样式
# 似乎无用
# BreakConstructorInitializers: BeforeColon
# ConstructorInitializerAllOnOneLineOrOnePerLine: true
# ConstructorInitializerIndentWidth
# 用于设定构造函数和多继承的缩进长度


# 继承样式
# 与构造函数初始化列表类似
# BreakInheritanceList: BeforeColon

# ____________________________________________________________

# 指针对齐
# 貌似不起作用
# 或许受厂商影响,google为左对齐
PointerAlignment: Left

# ____________________________________________________________

# 自动命名空间注释
FixNamespaceComments: true

# 命名空间缩进
NamespaceIndentation: Inner

# ____________________________________________________________

# include按照下方正则排序
IncludeBlocks: Regroup

# include排序优先级
# ***LLVM的此项设置***
IncludeCategories:
  - Regex:           '^"(llvm|llvm-c|clang|clang-c)/'
    Priority:        2
  - Regex:           '^(<|"(gtest|gmock|isl|json)/)'
    Priority:        3
  - Regex:           '<[[:alnum:].]+>'
    Priority:        4
  - Regex:           '.*'
    Priority:        1

# IncludeIsMainRegex指定file-to-main-include映射中允许的后缀的正则表达式
# 暂未配置

# IndentPPDirectives预处理缩进,未配置

# include排序,大小写
# 未观察对上方正则是否有影响,已配置未启用
# SortIncludes: true

# 对using进行排序
SortUsingDeclarations: true

# c风格强制添加空格
SpaceAfterCStyleCast: true

# 默认template关键字后有空格
# 此条无视
# SpaceAfterTemplateKeyword: false

# 构造函数调用时初始化列表构造{}前添加空格
SpaceBeforeCpp11BracedList: true


# 已配置到2.13
